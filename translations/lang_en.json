var Vector = (components) => {
  var state = {
    values:components
  };
  
  return Object.assign(state,
    add(state),
    subtract(state),
    dot(state),
    norm(state)
  )
};

var add = (numbers) => ({
 add : (cur) => {
   return new Vector(numbers.values.map((n, i)=>{
     return cur.values[i] + n
   })
   )
 }
})

var subtract = (numbers) => ({
 subtract : (cur) => {
 return new Vector(numbers.values.map((n, i)=>{
     return cur.values[i] - n
   })
   )
 }
})

var dot = (numbers) => ({
 dot : (cur) => {
   return new Vector(numbers.values.map((n, i)=>{
     return cur.values[i] * n
   }).reduce((sum, c)=>{
     return sum + c
   })
  )
 }
})

var norm = (numbers) => ({
 norm : (cur) => {
   return new Vector(numbers.values.map((n, i)=>{
     return cur.values[i] ^ n
   }).reduce((sum, c)=>{
     return sum + c
   })
  )
 }
})
